/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.10.1/userguide/building_java_projects.html in the Gradle documentation.
 */

plugins {
    id("org.springframework.boot") version("3.3.3")
    id("io.spring.dependency-management") version("1.0.11.RELEASE")
    application
    java
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Spring Boot Starter Dependencies
    implementation(platform("org.springframework.boot:spring-boot-dependencies:3.3.3"))
    implementation("org.springframework.boot:spring-boot-starter")
    implementation("org.springframework.boot:spring-boot-starter-web")
    implementation("org.springframework.boot:spring-boot-starter-validation")
    implementation("org.springframework.boot:spring-boot-starter-data-jpa")
    implementation("org.springframework.boot:spring-boot-starter-security")

    // Database Dependencies
    implementation("org.postgresql:postgresql") // PostgreSQL JDBC driver
    implementation("com.zaxxer:HikariCP") // Connection pool

    // JWT dependencies
    implementation("com.auth0:java-jwt:4.4.0")
    implementation("io.jsonwebtoken:jjwt-api:0.12.6")
    implementation("io.jsonwebtoken:jjwt-impl:0.12.6")
    implementation("io.jsonwebtoken:jjwt-jackson:0.12.6")

    // Validation and Lombok dependencies
    implementation("jakarta.validation:jakarta.validation-api:3.1.0")
    implementation("org.projectlombok:lombok:1.18.36")
    compileOnly("org.projectlombok:lombok:1.18.36")
    annotationProcessor("org.projectlombok:lombok:1.18.36")

    // Testing dependencies
    testImplementation("org.springframework.boot:spring-boot-starter-test")
    testImplementation(libs.junit.jupiter)
    testRuntimeOnly("org.junit.platform:junit-platform-launcher")

    // Miscellaneous
    implementation("com.microsoft.sqlserver:mssql-jdbc:12.2.0.jre11")
    implementation("mysql:mysql-connector-java:8.0.33")
    implementation(libs.guava)
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
    }
}

application {
    // Define the main class for the application.
    // mainClass = "org.example.SimpleHttpServerApplication"
    mainClass = "org.example.SimpleHttpServerApplication"
}

tasks.named<Test>("test") {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}
